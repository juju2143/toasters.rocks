<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>p5.js on toasters rocks</title><link>http://toasters.rocks/tags/p5.js/</link><description>Recent content in p5.js on toasters rocks</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright Â© 2020 J.P. Savard</copyright><lastBuildDate>Fri, 29 Nov 2019 02:47:27 +0000</lastBuildDate><atom:link href="http://toasters.rocks/tags/p5.js/index.xml" rel="self" type="application/rss+xml"/><item><title>ecco the dolphin</title><link>http://toasters.rocks/ecco-the-dolphin/</link><pubDate>Fri, 29 Nov 2019 02:47:27 +0000</pubDate><guid>http://toasters.rocks/ecco-the-dolphin/</guid><description>Welcome to the second installment of my code experiments! This time we&amp;rsquo;re gonna look into the weird effect used in the background of messages in Ecco the Dolphin for the Sega Genesis (or MegaDrive, if you&amp;rsquo;re asking someone outside the Americas). I got the idea from Twitter user @Foone who helpfully reverse engineered the game ROM (with Twitter user @Reaper_man02) to figure out how it works and wrote an implementation in Python.</description></item><item><title>trippy perlin noise</title><link>http://toasters.rocks/trippy-perlin-noise/</link><pubDate>Mon, 25 Nov 2019 18:16:14 +0000</pubDate><guid>http://toasters.rocks/trippy-perlin-noise/</guid><description>Now that I can easily embed JavaScript on this blog, I should put here some of my experiments and weird code that does nothing, cause why not. This one is some colored Perlin noise made using p5.js, it would be pretty cool as a background for something, isn&amp;rsquo;t it?
It is quite simple using the noise function, one the simplest things you can do with it is color = noise(x, y, time) for each pixel on the canvas, usually you make it grayscale but this time I&amp;rsquo;m generating 3 of them for each color component (red, green, blue) with a different seed.</description></item></channel></rss>